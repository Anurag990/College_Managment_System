package com.codingshuttle.tutorial.dataMapping.CollegeManagmentSystem.controllers;import com.codingshuttle.tutorial.dataMapping.CollegeManagmentSystem.entites.Professor;import com.codingshuttle.tutorial.dataMapping.CollegeManagmentSystem.services.ProfessorService;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import java.util.Optional;@RestController@RequestMapping("/professor")public class ProfessorController {    private final ProfessorService professorService;    public ProfessorController(ProfessorService professorService)    {        this.professorService = professorService;    }    @PostMapping    public ResponseEntity<Professor> createNewProfessor(@RequestBody Professor professor)    {         Professor newProfessor = professorService.createNewProfessor(professor);         return new ResponseEntity<>(newProfessor, HttpStatus.CREATED);    }    @GetMapping(path = "/{professorId}")    public ResponseEntity<Professor> getProfessorById(@PathVariable Long professorId)    {        Optional<Professor> professor = professorService.getProfessorById(professorId);        return professor.map(professorEntity -> ResponseEntity.ok(professorEntity)).orElse(ResponseEntity.notFound().build());    }    @PutMapping(path = "/{subjectId}/assignSubject/{professorId}")    public ResponseEntity<Professor> assignSubjectToProfessor(@PathVariable Long subjectId, @PathVariable Long professorId)    {        return professorService.assignSubjectToProfessor(subjectId,professorId);    }    @PutMapping("/{professorId}/students/{studentId}")    public ResponseEntity<Professor> assignStudentToProfessor(@PathVariable Long studentId, @PathVariable Long professorId) {        return professorService.assignStudentToProfessor(studentId, professorId);    }}