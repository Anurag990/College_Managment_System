package com.codingshuttle.tutorial.dataMapping.CollegeManagmentSystem.services;import com.codingshuttle.tutorial.dataMapping.CollegeManagmentSystem.entites.AdmissionRecord;import com.codingshuttle.tutorial.dataMapping.CollegeManagmentSystem.entites.Student;import com.codingshuttle.tutorial.dataMapping.CollegeManagmentSystem.repositories.AdmissionRecordRepo;import com.codingshuttle.tutorial.dataMapping.CollegeManagmentSystem.repositories.StudentRepo;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.stereotype.Service;import java.util.Optional;@Servicepublic class AdmissionRecordService {    private final AdmissionRecordRepo admissionRecordRepo;    private final StudentRepo studentRepo;    public AdmissionRecordService(AdmissionRecordRepo admissionRecordRepo, StudentRepo studentRepo) {        this.admissionRecordRepo = admissionRecordRepo;        this.studentRepo = studentRepo;    }    public AdmissionRecord createNewAdmission(AdmissionRecord admissionRecord) {        return admissionRecordRepo.save(admissionRecord);    }    public Optional<AdmissionRecord> getAdmissionById(Long admissionId) {        return admissionRecordRepo.findById(admissionId);    }    public ResponseEntity<AdmissionRecord> takeAdmission(Long studentId, Long admissionId) {        Optional<Student> student = studentRepo.findById(studentId);        Optional<AdmissionRecord> admissionRecord = admissionRecordRepo.findById(admissionId);        if (student.isPresent() && admissionRecord.isPresent()) {            AdmissionRecord admission = admissionRecord.get();            Student student1 = student.get();            admission.setStudent(student1);            AdmissionRecord updatedAdmissionRecord = admissionRecordRepo.save(admission);            return ResponseEntity.ok(updatedAdmissionRecord); // Return 200 OK with the updated admission record        } else {            return ResponseEntity.status(HttpStatus.NOT_FOUND).build(); // Return 404 Not Found if either entity is missing        }    }}